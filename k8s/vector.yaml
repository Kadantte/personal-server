role: Agent
env:
  - name: KUBERNETES_SERVICE_HOST
    value: "kubernetes.default.svc"

tolerations:
  - key: "kubernetes.io/hostname"
    operator: "Exists"
    effect: "NoSchedule"
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists

podMonitor:
  enabled: true

customConfig:
  data_dir: /vector-data-dir
  api:
    enabled: true
    address: 127.0.0.1:8686
    playground: false
  sources:
    kubernetes_logs:
      type: kubernetes_logs
    host_metrics:
      filesystem:
        devices:
          excludes: [binfmt_misc]
        filesystems:
          excludes: [binfmt_misc]
        mountpoints:
          excludes: ["*/proc/sys/fs/binfmt_misc"]
      type: host_metrics
    internal_metrics:
      type: internal_metrics
  # Transform to convert to OpenTelemetry format
  transforms:
    to_otel:
      type: remap
      inputs:
        - kubernetes_logs
      source: |
        # Convert timestamp to RFC3339Nano format
        . = {
          "body": { "message": .message },
          "severity_text": get(., ["severity"]) ?? "INFO",
          "timestamp_nanos": to_unix_timestamp!(.timestamp, unit: "nanoseconds"),
          "resource_attributes": {
              "k8s.namespace.name": .kubernetes.namespace_name,
              "k8s.pod.name": .kubernetes.pod_name,
              "k8s.container.name": .kubernetes.container_name,
              "k8s.node.name": .kubernetes.host,
              "service.name": get(., ["kubernetes", "labels", "app"]) ?? "unknown",
              "service.version": get(., ["kubernetes", "labels", "version"]) ?? "unknown",
          },
          "attributes": {
            "container.id": .kubernetes.container_id,
            "stream": .stream,
            "log.file.path": .file
          }
        }
  sinks:
    prom_exporter:
      type: prometheus_exporter
      inputs: [host_metrics, internal_metrics]
      address: "[::]:9090"
      #stdout:
      #  type: console
      #  inputs: [to_otel]
      #  encoding:
      #    codec: json
    quickwit_logs:
      type: http
      method: post
      inputs: [to_otel]
      encoding:
        codec: "json"
      framing:
        method: "newline_delimited"
      uri: "http://quickwit-indexer:7280/api/v1/otel-logs-v0_7/ingest"
